@page
@model HospOps.Pages.Calendar.IndexModel
@{
    ViewData["Title"] = "Calendar";
}

<h2>Calendar</h2>

<!-- Visual Monthly Calendar -->
<div id="calendar" class="mb-4"></div>

<!-- Event Creation Form -->
<form method="post" asp-page-handler="Create" class="mb-4">
    <div class="row g-2">
        <div class="col-md-3">
            <input asp-for="NewEvent.EventName" class="form-control" placeholder="Event Name" />
        </div>
        <div class="col-md-2">
            <input asp-for="NewEvent.StartDate" type="date" class="form-control" />
        </div>
        <div class="col-md-2">
            <input asp-for="NewEvent.EndDate" type="date" class="form-control" />
        </div>
        <div class="col-md-2">
            <select asp-for="NewEvent.EventType" class="form-select">
                <option>Group</option>
                <option>Meeting</option>
                <option>Other</option>
            </select>
        </div>
        <div class="col-md-1">
            <input asp-for="NewEvent.Recurring" type="checkbox" class="form-check-input" /> Recurring
        </div>
        <div class="col-md-2">
            <div class="mb-3">
                <label asp-for="NewEvent.Notes" class="form-label"></label>
                <textarea asp-for="NewEvent.Notes" class="form-control" rows="3" style="resize: vertical;"></textarea>
                <span asp-validation-for="NewEvent.Notes" class="text-danger"></span>
            </div>
        </div>
    </div>
    <button class="btn btn-primary mt-2" type="submit">Add Event</button>
</form>

<!-- Upcoming Events List -->
<h4>Upcoming Events</h4>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Event Name</th>
            <th>Type</th>
            <th>Start</th>
            <th>End</th>
            <th>Recurring</th>
            <th>Notes</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var ev in Model.Events)
    {
        <tr>
            <td>@ev.EventName</td>
            <td>@ev.EventType</td>
            <td>@ev.StartDate.ToShortDateString()</td>
            <td>@ev.EndDate.ToShortDateString()</td>
            <td>@(ev.Recurring ? "Yes" : "No")</td>
            <td style="word-break: break-word;">@ev.Notes</td>
            <td>
                <form method="post" asp-page-handler="Delete" asp-route-id="@ev.Id" onsubmit="return confirm('Delete this event?');">
                    <button class="btn btn-sm btn-danger">Delete</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 600,
                events: [
                    @for (int i = 0; i < Model.Events.Count; i++)
                    {
                        var ev = Model.Events[i];
                        <text>
                        {
                            title: "@(ev.EventName?.Replace("\\", "\\\\").Replace("\"", "\\\""))",
                            start: "@ev.StartDate.ToString("yyyy-MM-dd")",
                            end: "@ev.EndDate.AddDays(1).ToString("yyyy-MM-dd")",
                            description: "@(ev.Notes?.Replace("\\", "\\\\").Replace("\"", "\\\""))"
                        }@(i < Model.Events.Count - 1 ? "," : "")
                        </text>
                    }
                ],
                eventDidMount: function(info) {
                    if (info.event.extendedProps.description) {
                        info.el.title = info.event.extendedProps.description;
                    }
                }
            });
            calendar.render();
        });
    </script>
}